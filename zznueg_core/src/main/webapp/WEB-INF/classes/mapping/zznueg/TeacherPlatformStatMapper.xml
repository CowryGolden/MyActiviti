<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<!-- 教师平台统计SQLMap -->
<mapper namespace="com.zzrenfeng.zznueg.dao.TeacherPlatformStatMapper" >
	<!-- 获取全校所有学生的各科成绩 -->
	<select id="getAllStusSubScores" parameterType="java.util.Map" resultType="java.util.HashMap">
		select 
			m.id as stuUserId,
			m.tsno as stuNo,
			m.sex as stuSex,
			n.weige as weige,
			n.banshu as banshu,
			n.jiaoan as jiaoan,
			n.kejian as kejian,
			n.zong as zong
		from zznu_eva_teach_stu_info m 
		left join (
			select v.stuUserId as stuUserId,
				v.weige as weige,
				v.banshu as banshu,
				v.jiaoan as jiaoan,
				v.kejian as kejian,
				(v.weige+v.banshu+v.jiaoan+v.kejian) as zong
			from (
				select a.stuUserId,
					sum(case when a.subjectId='01' then if(a.evalScore is not null,a.evalScore,null) end) as weige,
					sum(case when a.subjectId='02' then if(a.evalScore is not null,a.evalScore,null) end) as banshu,
					sum(case when a.subjectId='03' then if(a.evalScore is not null,a.evalScore,null) end) as jiaoan,
					sum(case when a.subjectId='04' then if(a.evalScore is not null,a.evalScore,null) end) as kejian	
				from (
					select tt.pid as uploadPid,e.stuUserId as stuUserId,e.subjectId as subjectId,e.uploadPath as uploadPath,
						tt.uploadCount as uploadCount,e.evalScore as evalScore,e.uploadTime as uploadTime,e.evalTime as evalTime
					from (
						select max(s.pid) as pid,max(s.uploadCount) as uploadCount
						from (
							select subjectId,max(evalScore) as evalScore 
							from zznu_eva_stu_upload_info 
							where isUploadSucess='S' 
							group by stuUserId,subjectId
						) t left join zznu_eva_stu_upload_info s on (t.subjectId=s.subjectId and t.evalScore=s.evalScore)
						
						group by s.stuUserId,t.subjectId,t.evalScore
					) tt left join zznu_eva_stu_upload_info e on tt.pid=e.pid
				) a group by a.stuUserId
			) v
		) n on m.id=n.stuUserId
		where m.userType='S' and m.status='E' and m.isOpenAct='1'
		order by n.zong desc
	</select>

	<!-- 获取某个教师指导的学生的各科成绩 -->
	<select id="getMyStusSubScoresByTuid" parameterType="java.util.Map" resultType="java.util.HashMap">
		select 
			m.profId as profId,
			m.teachUserId as teachUserId,
			m.classId as classId,
			m.className as className,
			m.deptId as deptId,
			m.deptName as deptName,
			m.acaId as acaId,
			m.acaName as acaName,
			m.stuUserId as stuUserId,
			m.stuNo as stuNo,
			m.stuName as stuName,
			m.stuSex as stuSex,
			n.weige as weige,
			n.banshu as banshu,
			n.jiaoan as jiaoan,
			n.kejian as kejian,
			n.zong as zong
		from (
			select 
				a.profId as profId,
				a.teachUserId as teachUserId,
				a.classId as classId,
				b.className as className,
				b.deptId as deptId,
				b.deptName as deptName,
				c.acaId as acaId,
				c.acaName as acaName,
				d.id as stuUserId,
				d.tsno as stuNo,
				d.name as stuName,
				d.sex as stuSex
			from zznu_eva_teach_class_rel a 
				left join zznu_eva_class_info b 
					on a.classId=b.classId
				left join zznu_eva_dept_info c
					on b.deptId=c.deptId
				left join zznu_eva_teach_stu_info d 
					on a.classId=d.classId
			where a.teachUserId=#{teachUserId}
				and a.status='E' and b.status='E' and c.status='E' and d.status='E'
				and d.userType='S' and d.isOpenAct='1' 
			order by b.deptId,a.classId asc 
		) m left join (
			select v.stuUserId as stuUserId,
				v.weige as weige,
				v.banshu as banshu,
				v.jiaoan as jiaoan,
				v.kejian as kejian,
				(v.weige+v.banshu+v.jiaoan+v.kejian) as zong
			from (
				select a.stuUserId,
					sum(case when a.subjectId='01' then if(a.evalScore is not null,a.evalScore,null) end) as weige,
					sum(case when a.subjectId='02' then if(a.evalScore is not null,a.evalScore,null) end) as banshu,
					sum(case when a.subjectId='03' then if(a.evalScore is not null,a.evalScore,null) end) as jiaoan,
					sum(case when a.subjectId='04' then if(a.evalScore is not null,a.evalScore,null) end) as kejian	
				from (
					select tt.pid as uploadPid,e.stuUserId as stuUserId,e.subjectId as subjectId,e.uploadPath as uploadPath,
						tt.uploadCount as uploadCount,e.evalScore as evalScore,e.uploadTime as uploadTime,e.evalTime as evalTime
					from (
						select max(s.pid) as pid,max(s.uploadCount) as uploadCount
						from (
							select subjectId,max(evalScore) as evalScore 
							from zznu_eva_stu_upload_info 
							where isUploadSucess='S' 
							group by stuUserId,subjectId
						) t left join zznu_eva_stu_upload_info s on (t.subjectId=s.subjectId and t.evalScore=s.evalScore)
						
						group by s.stuUserId,t.subjectId,t.evalScore
					) tt left join zznu_eva_stu_upload_info e on tt.pid=e.pid
				) a group by a.stuUserId
			) v
		) n on m.stuUserId=n.stuUserId 
		order by m.deptId,m.classId asc
	</select>
	
	<!-- 通过教师ID获取某个教师教授学生最大上传的次数 -->
	<select id="getStuMaxUpCountByTuid" parameterType="java.util.Map" resultType="java.lang.Integer">
		select max(uploadCount) as maxCount from zznu_eva_stu_upload_info where stuUserId in (
			select distinct b.id as stuUserId
			from zznu_eva_teach_class_rel a left join zznu_eva_teach_stu_info b on a.classId=b.classId
			where a.teachUserId=#{teachUserId,jdbcType=VARCHAR}
				and a.status='E' and b.status='E' and b.userType='S' and b.isOpenAct='1'
		)
	</select>
	
	<!-- 根据教师ID、科目ID和上传次数查询该科目的总成绩，总考试人数，平均成绩 -->
	<select id="getAvgSubScoreByTidSidCnt" parameterType="java.util.Map" resultType="java.util.HashMap">
		select 
			m.subjectId as subjectId,
			m.sumScore as sumScore,
			n.totalCount as totalCount,
			round(m.sumScore/n.totalCount,2) as avgSubScore
		from (
			select subjectId,sum(evalScore) as sumScore from zznu_eva_stu_upload_info where stuUserId in (
				select distinct b.id as stuUserId
				from zznu_eva_teach_class_rel a left join zznu_eva_teach_stu_info b on a.classId=b.classId
				where a.teachUserId=#{teachUserId,jdbcType=VARCHAR}
					and a.status='E' and b.status='E' and b.userType='S' and b.isOpenAct='1'
			) and subjectId=#{subjectId,jdbcType=VARCHAR} 
			<if test="uploadCount != null and uploadCount != ''">
				and uploadCount=#{uploadCount,jdbcType=SMALLINT}
			</if>
		) m , (
			select count(*) as totalCount from zznu_eva_stu_upload_info where stuUserId in (
				select distinct b.id as stuUserId
				from zznu_eva_teach_class_rel a left join zznu_eva_teach_stu_info b on a.classId=b.classId
				where a.teachUserId=#{teachUserId,jdbcType=VARCHAR}
					and a.status='E' and b.status='E' and b.userType='S' and b.isOpenAct='1'
			) and subjectId=#{subjectId,jdbcType=VARCHAR}
			<if test="uploadCount != null and uploadCount != ''">
				and uploadCount=#{uploadCount,jdbcType=SMALLINT}
			</if>
		) n
	</select>
	
	<!-- 根据科目ID查询该科目(全院校)的总成绩，总考试人数，平均成绩 -->
	<select id="getAvgSubScoreBySid" parameterType="java.util.Map" resultType="java.util.HashMap">
		select 
			a.subjectId as subjectId,
			a.sumScore as sumScore,
			a.subCount as subCount,
			round(a.sumScore/a.subCount,2) as avgSubScore
		from (
			select subjectId,sum(evalScore) as sumScore,t.subCount as subCount
			from zznu_eva_stu_upload_info,(select count(*) as subCount from zznu_eva_stu_upload_info where isUploadSucess='S' and subjectId=#{subjectId,jdbcType=VARCHAR}) t
			where isUploadSucess='S' and subjectId=#{subjectId,jdbcType=VARCHAR}
			group by subjectId
		) a 
	</select>

</mapper>

